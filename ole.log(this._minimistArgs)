[1mdiff --git a/package.json b/package.json[m
[1mindex a5781f8..a991246 100644[m
[1m--- a/package.json[m
[1m+++ b/package.json[m
[36m@@ -10,6 +10,7 @@[m
         "inquirer": "^9.3.1",[m
         "log-update": "^6.0.0",[m
         "window-size": "^1.1.1",[m
[32m+[m[32m        "zod": "^3.23.8",[m
         "zx": "^8.1.2"[m
     },[m
     "devDependencies": {[m
[1mdiff --git a/pnpm-lock.yaml b/pnpm-lock.yaml[m
[1mindex 5efe18c..3ffb4a0 100644[m
[1m--- a/pnpm-lock.yaml[m
[1m+++ b/pnpm-lock.yaml[m
[36m@@ -20,6 +20,9 @@[m [mimporters:[m
       window-size:[m
         specifier: ^1.1.1[m
         version: 1.1.1[m
[32m+[m[32m      zod:[m
[32m+[m[32m        specifier: ^3.23.8[m
[32m+[m[32m        version: 3.23.8[m
       zx:[m
         specifier: ^8.1.2[m
         version: 8.1.2[m
[36m@@ -338,6 +341,9 @@[m [mpackages:[m
     resolution: {integrity: sha512-G8ura3S+3Z2G+mkgNRq8dqaFZAuxfsxpBB8OCTGRTCtp+l/v9nbFNmCUP1BZMts3G1142MsZfn6eeUKrr4PD1Q==}[m
     engines: {node: '>=18'}[m
 [m
[32m+[m[32m  zod@3.23.8:[m
[32m+[m[32m    resolution: {integrity: sha512-XBx9AXhXktjUqnepgTiE5flcKIYWi/rme0Eaj+5Y0lftuGBq+jyRu/md4WnuxqgP1ubdpNCsYEYPxrzVHD8d6g==}[m
[32m+[m
   zx@8.1.2:[m
     resolution: {integrity: sha512-zkCiXKh8D/eo6r58OmJvO5mc2NthcSRvysb3fuS6VQlHPbEPBcxduRwM3m6ZfHj+7cLHcrahCnuO2TDAbW+6xw==}[m
     engines: {node: '>= 12.17.0'}[m
[36m@@ -650,6 +656,8 @@[m [msnapshots:[m
       string-width: 7.1.0[m
       strip-ansi: 7.1.0[m
 [m
[32m+[m[32m  zod@3.23.8: {}[m
[32m+[m
   zx@8.1.2:[m
     optionalDependencies:[m
       '@types/fs-extra': 11.0.4[m
[1mdiff --git a/src/api/help.ts b/src/api/help.ts[m
[1mindex 3aa0975..34bea8c 100644[m
[1m--- a/src/api/help.ts[m
[1m+++ b/src/api/help.ts[m
[36m@@ -13,7 +13,6 @@[m [mtype Option = {[m
 export default class Help {[m
     private _options: Option[] = [][m
 [m
[31m-    /**@type {{argument:string, description: string}[]} */[m
     private _arguments: Argument[] = [][m
 [m
     _usages = "command [OPTIONS] [ARGUMENTS] "[m
[1mdiff --git a/src/yt-dlp/video.ts b/src/yt-dlp/video.ts[m
[1mindex 5c0ca2d..f256d01 100644[m
[1m--- a/src/yt-dlp/video.ts[m
[1m+++ b/src/yt-dlp/video.ts[m
[36m@@ -1,60 +1,78 @@[m
 #!/usr/bin/env zx[m
 [m
 import os from "os"[m
[32m+[m[32mimport { z } from "zod"[m
 import "zx/globals"[m
[32m+[m[32mimport Arguments from "../api/arguments.js"[m
 import Help from "../api/help.js"[m
 [m
[31m-const exit = process.exit[m
[31m-[m
[31m-const argv = minimist(process.argv.slice(3), {[m
[31m-    alias: { help: ["h"], resolution: ["r"] },[m
[31m-    boolean: ["help", "sponsorblock", "debug"],[m
[32m+[m[32mconst exts = [[m
[32m+[m[32m    z.literal("mp4"),[m
[32m+[m[32m    z.literal("avi"),[m
[32m+[m[32m    z.literal("flv"),[m
[32m+[m[32m    z.literal("mkv"),[m
[32m+[m[32m    z.literal("mov"),[m
[32m+[m[32m    z.literal("webm"),[m
[32m+[m[32m] as const[m
[32m+[m[32mconst args = new Arguments({[m
[32m+[m[32m    _: z.array(z.string()).min(1, "Missing argument URL. Please provide an url."),[m
[32m+[m[32m    __: z.array(z.string()).optional(),[m
[32m+[m[32m    format: z.string().optional(),[m
[32m+[m[32m    section: z.string().optional(),[m
[32m+[m[32m    cookies: z.string().optional(),[m
[32m+[m[32m    browser: z.string().optional(),[m
[32m+[m[32m    resolution: z.number().int().optional(),[m
[32m+[m[32m    threads: z.number().int().default(1),[m
[32m+[m[32m    sponsorblock: z.boolean().default(true),[m
[32m+[m[32m    ext: z.union(exts).default("mp4"),[m
[32m+[m[32m    help: z.boolean().optional(),[m
[32m+[m[32m    debug: z.boolean().optional(),[m
 })[m
 [m
[31m-if (argv.help) {[m
[31m-    const helper = new Help("Usage: video [OPTIONS] URL")[m
[31m-    helper.argument("URL", "url of the video to download")[m
[31m-    helper[m
[31m-        .option("--section REGEX", "Section of the video to download. Timestamp must start with * (ex: '*0.11-0.50')")[m
[31m-        .option("-c, --cookies FILE", "Netscape formatted file to read cookies from and dump cookie jar in")[m
[31m-        .option("--browser BROWSER", "Name of the browser to use cookies from")[m
[31m-        .option("--ext FORMAT", "Containers that may be used when merging format")[m
[31m-        .option("-r, --resolution", "Resolution to download video. Use max for maximum resolution")[m
[31m-        .option("--threads NUMBER", "Number of concurrent downloads. Default is 1")[m
[31m-        .option("--no-sponsorblock", "Disable sponsorblock for downloaded video. Default is on")[m
[31m-        .option("-h, --help", "Prints the help menu")[m
[31m-        .option("--debug", "Prints the debug info")[m
[32m+[m[32mconst helper = new Help("Usage: video [OPTIONS] URL")[m
[32m+[m[32mhelper.argument("URL", "url of the video to download")[m
[32m+[m[32mhelper[m
[32m+[m[32m    .option("-f, --format", "yt-dlp format. Default best with 1080p. You can use -r to set resolution.")[m
[32m+[m[32m    .option("-r, --resolution", "Resolution to download video. Use -f=null for maximum resolution")[m
[32m+[m[32m    .option("--section REGEX", "Section of the video to download. Timestamp must start with * (ex: '*0.11-0.50')")[m
[32m+[m[32m    .option("-c, --cookies FILE", "Netscape formatted file to read cookies from and dump cookie jar in")[m
[32m+[m[32m    .option("--browser BROWSER", "Name of the browser to use cookies from")[m
[32m+[m[32m    .option("--ext FORMAT", "Containers that may be used when merging format")[m
[32m+[m[32m    .option("--threads NUMBER", "Number of concurrent downloads. Default is 1")[m
[32m+[m[32m    .option("--no-sponsorblock", "Disable sponsorblock for downloaded video. Default is on")[m
[32m+[m[32m    .option("-h, --help", "Prints the help menu")[m
[32m+[m[32m    .option("--debug", "Prints the debug info")[m
 [m
[31m-    helper.print()[m
[31m-    exit(0)[m
[31m-}[m
[31m-[m
[31m-if (typeof argv.sponsorblock === "undefined") argv.sponsorblock = true[m
[31m-if (typeof argv.threads === "undefined") argv.threads = 1[m
[31m-if (typeof argv.ext === "undefined") argv.ext = "mp4"[m
[32m+[m[32mconst argv = args.parse(helper, {[m
[32m+[m[32m    alias: {[m
[32m+[m[32m        h: "help",[m
[32m+[m[32m        r: "resolution",[m
[32m+[m[32m        f: "format",[m
[32m+[m[32m        c: "cookie",[m
[32m+[m[32m    },[m
[32m+[m[32m    boolean: ["help", "sponsorblock", "debug"],[m
[32m+[m[32m    default: { sponsorblock: true },[m
[32m+[m[32m})[m
 [m
 if (argv.debug) console.log(argv)[m
 [m
 const outputTemplate = `${os.homedir()}/Downloads/Video/%(title)s-%(id)s.%(ext)s`[m
 [m
[31m-let format[m
[31m-if (!argv.resolution) {[m
[32m+[m[32mlet format = "bv+ba/b"[m
[32m+[m[32mif (argv.format === "null") {[m
[32m+[m[32m    format = "bv+ba/b"[m
[32m+[m[32m} else if (argv.format) {[m
[32m+[m[32m    format = argv.format[m
[32m+[m[32m} else if (!argv.resolution) {[m
     format = "bv[height<=1080]+ba/b[height<=1080]"[m
 } else if (typeof argv.resolution === "number") {[m
     format = `bv[height<=${argv.resolution}]+ba/b[height<=${argv.resolution}]`[m
[31m-} else {[m
[31m-    format = "bv+ba/b"[m
 }[m
[31m-[m
 const ytDlpArgs = [[m
[31m-    "--format",[m
[31m-    format,[m
[31m-    "--merge-output-format",[m
[31m-    argv.ext,[m
[31m-    "--concurrent-fragments",[m
[31m-    argv.threads,[m
[31m-    "--output",[m
[31m-    outputTemplate,[m
[32m+[m[32m    `--format=${format}`,[m
[32m+[m[32m    `--merge-output-format=${argv.ext}`,[m
[32m+[m[32m    `--concurrent-fragments=${argv.threads}`,[m
[32m+[m[32m    `--output=${outputTemplate}`,[m
     "--add-metadata",[m
     "--embed-chapters",[m
     "--list-formats",[m
[36m@@ -67,14 +85,10 @@[m [mif (argv.section) ytDlpArgs.push("--download-sections", argv.section)[m
 if (argv.cookies) ytDlpArgs.push("--cookies", argv.cookies)[m
 if (argv.browser) ytDlpArgs.push("--cookies-from-browser", argv.browser)[m
 [m
[31m-let url = argv.url ?? argv._[0][m
[31m-if (!url) {[m
[31m-    console.log(chalk.red("Please provide a url or search term"))[m
[31m-    exit(0)[m
[31m-}[m
[32m+[m[32mlet url = argv._[0][m
 [m
 try {[m
[31m-    url = new URL(url)[m
[32m+[m[32m    url = new URL(url).toString()[m
 } catch (err) {[m
     url = `ytsearch:${url}`[m
 }[m
